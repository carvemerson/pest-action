name: 'Run Pest PHP'
description: 'Run Pest PHP for Laravel with Composer, Vite build, SQLite bootstrap, and Pest execution'
author: 'Emerson Carvalho'

inputs:
  php-version:
    description: 'PHP version used to run Pest'
    required: false
    default: '8.3'
  working-directory:
    description: 'Directory containing composer.json and the Laravel app'
    required: false
    default: '.'
  composer-options:
    description: 'Extra options for composer install (e.g., --no-scripts)'
    required: false
    default: ''
  node-version:
    description: 'Node version used to build assets'
    required: false
    default: '18'
  pest-args:
    description: 'Extra arguments passed to Pest (e.g., --filter=MyTest)'
    required: false
    default: ''
  continue-on-error:
    description: 'Whether the Pest step should continue on error'
    required: false
    default: 'false'

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        tools: composer:v2
        coverage: xdebug

    - name: Show PHP and Composer versions
      shell: bash
      run: |
        php -v
        composer -V

    - name: Install Composer dependencies (cached)
      uses: ramsey/composer-install@v3
      with:
        working-directory: ${{ inputs.working-directory }}
        composer-options: ${{ inputs.composer-options }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'npm'
        cache-dependency-path: package-lock.json

    - name: Install Node dependencies
      if: ${{ hashFiles('package.json') != '' }}
      shell: bash
      run: |
        if [ -f package-lock.json ]; then npm ci; else npm install; fi

    - name: Build assets (Vite)
      if: ${{ hashFiles('package.json') != '' }}
      shell: bash
      run: |
        if [ -f package.json ]; then npm run build --if-present; fi

    - name: Prepare Laravel application (.env, key, sqlite)
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set -e
        if [ -f .env.example ] && [ ! -f .env ]; then cp .env.example .env; fi
        php artisan key:generate --force --no-interaction || true
        mkdir -p database
        if [ ! -f database/database.sqlite ]; then touch database/database.sqlite; fi

    - name: Run migrations
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        php artisan migrate --force --no-interaction || true

    - name: Clear Laravel caches
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        php artisan config:clear || true
        php artisan cache:clear || true

    - name: Show Pest version
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ -x vendor/bin/pest ]; then vendor/bin/pest --version; else echo "Pest not found at vendor/bin/pest"; fi

    - name: Run Pest
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      continue-on-error: ${{ inputs.continue-on-error == 'true' }}
      run: |
        vendor/bin/pest ${{ inputs.pest-args }}


